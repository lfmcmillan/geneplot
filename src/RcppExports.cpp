// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// double_sum
double double_sum(NumericVector nu);
RcppExport SEXP _geneplot_double_sum(SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(double_sum(nu));
    return rcpp_result_gen;
END_RCPP
}
// int_sum
int int_sum(NumericVector nu);
RcppExport SEXP _geneplot_int_sum(SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(int_sum(nu));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_dist
List rcpp_calc_dist(NumericMatrix nu, bool leave_one_out, bool differenceLGPs);
RcppExport SEXP _geneplot_rcpp_calc_dist(SEXP nuSEXP, SEXP leave_one_outSEXP, SEXP differenceLGPsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< bool >::type leave_one_out(leave_one_outSEXP);
    Rcpp::traits::input_parameter< bool >::type differenceLGPs(differenceLGPsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_dist(nu, leave_one_out, differenceLGPs));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_min_beta
double rcpp_calc_min_beta(NumericMatrix nu_mat);
RcppExport SEXP _geneplot_rcpp_calc_min_beta(SEXP nu_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type nu_mat(nu_matSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_min_beta(nu_mat));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_max_beta
double rcpp_calc_max_beta(NumericMatrix nu_mat);
RcppExport SEXP _geneplot_rcpp_calc_max_beta(SEXP nu_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type nu_mat(nu_matSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_max_beta(nu_mat));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_multi_locus_dist
List rcpp_calc_multi_locus_dist(List nutab, bool leave_one_out, bool differenceLGPs);
RcppExport SEXP _geneplot_rcpp_calc_multi_locus_dist(SEXP nutabSEXP, SEXP leave_one_outSEXP, SEXP differenceLGPsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type nutab(nutabSEXP);
    Rcpp::traits::input_parameter< bool >::type leave_one_out(leave_one_outSEXP);
    Rcpp::traits::input_parameter< bool >::type differenceLGPs(differenceLGPsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_multi_locus_dist(nutab, leave_one_out, differenceLGPs));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_multi_locus_K
double rcpp_calc_multi_locus_K(List dist, double s);
RcppExport SEXP _geneplot_rcpp_calc_multi_locus_K(SEXP distSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_multi_locus_K(dist, s));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_multi_locus_K1
double rcpp_calc_multi_locus_K1(List dist, double s);
RcppExport SEXP _geneplot_rcpp_calc_multi_locus_K1(SEXP distSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_multi_locus_K1(dist, s));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_multi_locus_K2
double rcpp_calc_multi_locus_K2(List dist, double s);
RcppExport SEXP _geneplot_rcpp_calc_multi_locus_K2(SEXP distSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_multi_locus_K2(dist, s));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_multi_locus_K3
double rcpp_calc_multi_locus_K3(List dist, double s);
RcppExport SEXP _geneplot_rcpp_calc_multi_locus_K3(SEXP distSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_multi_locus_K3(dist, s));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_mu
double rcpp_calc_mu(List dist);
RcppExport SEXP _geneplot_rcpp_calc_mu(SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_mu(dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_sigma
double rcpp_calc_sigma(List dist);
RcppExport SEXP _geneplot_rcpp_calc_sigma(SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_sigma(dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_what
double rcpp_calc_what(double x, double sh, List dist, bool use_x);
RcppExport SEXP _geneplot_rcpp_calc_what(SEXP xSEXP, SEXP shSEXP, SEXP distSEXP, SEXP use_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sh(shSEXP);
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< bool >::type use_x(use_xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_what(x, sh, dist, use_x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_uhat
double rcpp_calc_uhat(double sh, List dist);
RcppExport SEXP _geneplot_rcpp_calc_uhat(SEXP shSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sh(shSEXP);
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_uhat(sh, dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_shat
double rcpp_calc_shat(double x, List dist);
RcppExport SEXP _geneplot_rcpp_calc_shat(SEXP xSEXP, SEXP distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_shat(x, dist));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_fhat
NumericVector rcpp_calc_fhat(NumericVector x_vec, List dist, double min_dist, double max_dist, double mean_dist, bool logten);
RcppExport SEXP _geneplot_rcpp_calc_fhat(SEXP x_vecSEXP, SEXP distSEXP, SEXP min_distSEXP, SEXP max_distSEXP, SEXP mean_distSEXP, SEXP logtenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_vec(x_vecSEXP);
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type min_dist(min_distSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< double >::type mean_dist(mean_distSEXP);
    Rcpp::traits::input_parameter< bool >::type logten(logtenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_fhat(x_vec, dist, min_dist, max_dist, mean_dist, logten));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_Fhat
NumericVector rcpp_calc_Fhat(NumericVector x_vec, List dist, double min_dist, double max_dist, double mean_dist, bool logten, bool use_x);
RcppExport SEXP _geneplot_rcpp_calc_Fhat(SEXP x_vecSEXP, SEXP distSEXP, SEXP min_distSEXP, SEXP max_distSEXP, SEXP mean_distSEXP, SEXP logtenSEXP, SEXP use_xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_vec(x_vecSEXP);
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type min_dist(min_distSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< double >::type mean_dist(mean_distSEXP);
    Rcpp::traits::input_parameter< bool >::type logten(logtenSEXP);
    Rcpp::traits::input_parameter< bool >::type use_x(use_xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_Fhat(x_vec, dist, min_dist, max_dist, mean_dist, logten, use_x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_qsearch_params
List rcpp_calc_qsearch_params(List dist, double min_dist, double max_dist, double sh_tol, double max_quantile, bool logten);
RcppExport SEXP _geneplot_rcpp_calc_qsearch_params(SEXP distSEXP, SEXP min_distSEXP, SEXP max_distSEXP, SEXP sh_tolSEXP, SEXP max_quantileSEXP, SEXP logtenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type dist(distSEXP);
    Rcpp::traits::input_parameter< double >::type min_dist(min_distSEXP);
    Rcpp::traits::input_parameter< double >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< double >::type sh_tol(sh_tolSEXP);
    Rcpp::traits::input_parameter< double >::type max_quantile(max_quantileSEXP);
    Rcpp::traits::input_parameter< bool >::type logten(logtenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_qsearch_params(dist, min_dist, max_dist, sh_tol, max_quantile, logten));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_calc_Qhat
double rcpp_calc_Qhat(double y, List Fhat_qsearch_params, List nutab, bool logten);
RcppExport SEXP _geneplot_rcpp_calc_Qhat(SEXP ySEXP, SEXP Fhat_qsearch_paramsSEXP, SEXP nutabSEXP, SEXP logtenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< List >::type Fhat_qsearch_params(Fhat_qsearch_paramsSEXP);
    Rcpp::traits::input_parameter< List >::type nutab(nutabSEXP);
    Rcpp::traits::input_parameter< bool >::type logten(logtenSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calc_Qhat(y, Fhat_qsearch_params, nutab, logten));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geneplot_double_sum", (DL_FUNC) &_geneplot_double_sum, 1},
    {"_geneplot_int_sum", (DL_FUNC) &_geneplot_int_sum, 1},
    {"_geneplot_rcpp_calc_dist", (DL_FUNC) &_geneplot_rcpp_calc_dist, 3},
    {"_geneplot_rcpp_calc_min_beta", (DL_FUNC) &_geneplot_rcpp_calc_min_beta, 1},
    {"_geneplot_rcpp_calc_max_beta", (DL_FUNC) &_geneplot_rcpp_calc_max_beta, 1},
    {"_geneplot_rcpp_calc_multi_locus_dist", (DL_FUNC) &_geneplot_rcpp_calc_multi_locus_dist, 3},
    {"_geneplot_rcpp_calc_multi_locus_K", (DL_FUNC) &_geneplot_rcpp_calc_multi_locus_K, 2},
    {"_geneplot_rcpp_calc_multi_locus_K1", (DL_FUNC) &_geneplot_rcpp_calc_multi_locus_K1, 2},
    {"_geneplot_rcpp_calc_multi_locus_K2", (DL_FUNC) &_geneplot_rcpp_calc_multi_locus_K2, 2},
    {"_geneplot_rcpp_calc_multi_locus_K3", (DL_FUNC) &_geneplot_rcpp_calc_multi_locus_K3, 2},
    {"_geneplot_rcpp_calc_mu", (DL_FUNC) &_geneplot_rcpp_calc_mu, 1},
    {"_geneplot_rcpp_calc_sigma", (DL_FUNC) &_geneplot_rcpp_calc_sigma, 1},
    {"_geneplot_rcpp_calc_what", (DL_FUNC) &_geneplot_rcpp_calc_what, 4},
    {"_geneplot_rcpp_calc_uhat", (DL_FUNC) &_geneplot_rcpp_calc_uhat, 2},
    {"_geneplot_rcpp_calc_shat", (DL_FUNC) &_geneplot_rcpp_calc_shat, 2},
    {"_geneplot_rcpp_calc_fhat", (DL_FUNC) &_geneplot_rcpp_calc_fhat, 6},
    {"_geneplot_rcpp_calc_Fhat", (DL_FUNC) &_geneplot_rcpp_calc_Fhat, 7},
    {"_geneplot_rcpp_calc_qsearch_params", (DL_FUNC) &_geneplot_rcpp_calc_qsearch_params, 6},
    {"_geneplot_rcpp_calc_Qhat", (DL_FUNC) &_geneplot_rcpp_calc_Qhat, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_geneplot(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
